앞으로의 방향성 정하기
1. 일단 어떤 프로그램을 돌릴 수 있는지 확인 - 꽤나 복잡한 프로그램이여야 함
2. 디버깅 방법을 만들어야 겠음 기존 디버깅으로는 부족함. (코드 에디터를 만들까?)
3. 프로그램을 만들면서 부족한 기능들을 체워야함.
4. 어셈 공부 게속

> 게임을 만들어 보자.
SFML의 드로우 명령, 기초적 폰트 출력 등. 기반 인스트럭션을 만들어야함.
힙메모리와 구조체,클레스를 많이 사용하는 게임. 슈팅게임?

> 일단 C++로 먼저 만들고, 그걸 따라가는 식으로 하자.

> 게임을 개발하면서 더 많은 기능들을 게속 넣어보자. 게임속 코딩이라던지. 뭐 여러가지.

> 코드 에디터 만들때 문제
    1. 텍스트 선택(불규칙한 문자의 크기 문제), 복사, 붙여넣기, intellisence, 되돌리기, 등등
    2. 프로그램용 코딩용 키보드 만들어야 됨.
> C4droid에서 아쉬웠던거
    1. 코드 접기 / 펼치기
    2. 문장 변수 함께 검색 / 리플레이스
    3. 중단점이 번호에 종속됨. - 코드에 종속되도록 하자.
    4. 실행중 중단점 추가
    5. Watcher 항목 다양화 / 힙도 볼 수 있게 만들기 / 포인터 배열 보기?
    6. 호출스택 기록
    7. 디버깅중 코드 편집기로 돌아가 탐색 / 디스어셈블러 탐색 가능.
    8. 코드를 쓰면 코드 실행 비용 표시.
    9. 접근성 높은 설정

> 만들어 두면 이후에 만들 프로그램들에 확실한 도움이 될 것이다.


2. gnu와 msvc모두 고쳐야할 것
    1. lcstr, lwstr에 문자가 push될때, up에 0을 붙이는것 때문에 maxsiz를 넘어가서 데이터를 쓰게됨.
    2. 길이가 늘어나는 배열에 fm이 달려있는 경우가 있다. 모두 전역으로 돌려야 함.
    3. 이거 이렇게 바꾸라
    type_data *get_type_with_namesen(sen *tname)
	{
		type_data *td = nullptr;
		type_data *ntd = nullptr;
		char *bt = tname->at(0).data.str;
		for (int i = 0; i < types.size(); ++i)
		{
			if (strcmp(bt, types[i]->name.c_str()) == 0)
			{
				td = types[i];
				break;
			}
		}
        ...
    }

    type_data *get_array_type(type_data *td, int size)
	{
		type_data *rtd = (type_data *)fm->_New(sizeof(type_data), true);
		rtd->name.NULLState();
		rtd->name.Init(2, false);
		int len = strlen(td->name.c_str());
		rtd->name = td->name.c_str();
		rtd->name.push_back('[');

		string str = to_string(size);
		char *strnum = (char *)fm->_New(str.size() + 2, true);
		strcpy_s_s(strnum, str.size()+1, str.c_str());
		...
	}

	line 3086
	result_ten->memsiz = left_ten->memsiz + right_ten->memsiz + add + 1;
	result_ten->mem.NULLState();
	result_ten->mem.Init(result_ten->memsiz + 1, false); // 고침

	- 현재 msvc의 코드 해석과 컴파일은 되지만, 예제 틱텍토 게임의 승리를 판단하지 못한다.
	이걸 고쳐야 함.

	- PARAM inst 가 제대로 작동안함. (값 복사를 안함 ) > extension 함수가 뭘 못함
	
	- vec3f struct 타입은 float 타입 맴버 x, y, z를 가지는데, 메모리에 적제될때 uint형태로 저장됨. 케스팅이 제대로 작동 안하는듯.

고칠거
-> sen release 가 안된듯?
-> 일반함수의 return type이 설정 되나 확인

> 컴파일 오류 내고 ICB를 컴파일 하는 동안 정상적으로 돌게 하기
오류발생 -> currentError.txt에 기록 -> 최근 컴파일한 ICB 해제.
 : 그런데 어짜피 오류 하나 때문에 파일을 만들어야 한다면 좀 그럼. 그냥 데이터로 만들자.
에러 문장 형식 : 
[ERROR (error code)]in_Line(line number) : (error message).
라인은 어떻게 알음? 일단 \n이 나타날 때마다 라인이 바뀜. 컴파일 작업을 할때, 미리 지금 코드의 줄이 몇인지 확인할 필요가 있음.

오류발생
1. 세미클론 안찍었을때
2. 함수, 변수, 구조체, 연산자가 식별되지 않을 때.
3. 입력된 함수의 파라미터 개수가 잘못되었을때,
4. 입력된 변수의 타입이 잘못되었을 경우 ??
5. 코드의 {}, () 열고 닫는 것이 정확하지 않을때.
6. 0으로 나누었을때.
7. 

UpdateErrMsg(0, 0, "%s file is not exist.", (char*)filename);
UpdateErrMsg(1, "%s type is not exist.", bt);
UpdateErrMsg(2, "%s type typeoperation is not exist", cstr);
UpdateErrMsg(3, "%s type cannot have sub type.", t->name.c_str());
UpdateErrMsg(4, "%s function is not exist.", name);
UpdateErrMsg(5, "Unknown identifier %s", segs[i - 1]->at(0).data.str);

> 코딩 규칙. 추가하자.
1. 블럭의 시작에서 해당 블록의 지역변수들을 모두 선언한다.
2. 블럭에서 메모리의 헤제는 나중에 할당된 것부터 해제된다.