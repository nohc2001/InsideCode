float PI = 3.141592;
int main(){
	vec2f pos1 = _vec2f(10, 20);
	vec2f pos2 = _vec2f(3, 4);

	dbg("pos1 : (", pos1.x, ", ", pos1.y, ")\n");
	dbg("pos2 : (", pos2.x, ", ", pos2.y, ")\n");

	line2d line1 = _line2d(pos1, pos2);

	float len = get_distance2d(line1);

	circle cir1 = _circle(pos1, len);

	vec2f ratePos = get_pos_in_LineAndRatioAB(line1, 2, 1);
	angle2d ang1 = _angle2d_delta(pos1.x - pos2.x, pos1.y - pos2.y);
	angle2d ang2 = _angle2d(PI / 3);
	angle2d rang = addAngle(ang1, ang2);

	pos1 = _vec2f(pos1.x + rang.delta.x * 30, pos1.y + rang.delta.y * 30);
	vec2f cross = get_cross_line(_line2d(pos1, ratePos), _line2d(pos2, cir1.center));

	vec2f[2] circross = get_cross_CircleAndLine(cir1, _line2d(cross, _vec2f(100, 200)));
	if(isNAN(circross[0].x)){
		dbg("cross 0 is nan!!\n");
	}
	if(isNAN(circross[1].x)){
		dbg("cross 1 is nan!!\n");
	}

	int bSiz = 100;
	vec2f[100] bezierCurve = get_poses_in_Bezier1F(circross, pos2, cross, bSiz);
	int i=0;while(i<bSiz){
		dbg("pos[, i, "] : (", bezierCurve[i].x, ", ", bezierCurve[i].y, ")\n");
		i+=1;
	}
	return 0;
}