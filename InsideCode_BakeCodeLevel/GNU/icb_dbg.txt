Inside Code Bake System Start
ICB_StaticInit...finish
Create_New_ICB_Extension_Init : exGeometry Initialization...finish
Create_New_ICB[0x7fffffff71e0] Initialization...finish
ICB[0x7fffffff71e0] BakeCode start. filename : [code.txt]
ICB[0x7fffffff71e0] BakeCode_GetCodeFromText...finish
ICB[0x7fffffff71e0] BakeCode_AddTextBlocks...-----------------------------------------

 full text : 
float PI = 3.141592;
int main(){
	vec2f pos1 = _vec2f(10, 20);
	vec2f pos2 = _vec2f(3, 4);

	dbg("pos1 : (", pos1.x, ", ", pos1.y, ")\n");
	dbg("pos2 : (", pos2.x, ", ", pos2.y, ")\n");

	line2d line1 = _line2d(pos1, pos2);
	
	dbg("line1 : fp (", line1.fp.x, ", ", line1.fp.y, "), lp(", line1.lp.x, ", ", line1.lp.y, ")\n");

	float len = get_distance2d(line1);
	dbg("len : ", len, "\n");

	circle cir1 = _circle(pos1, len);
	dbg("cir1 : center(", cir1.center.x, ", ", cir1.center.y, "), radius(", cir1.radius, ")\n");

	vec2f ratePos = get_pos_in_LineAndRatioAB(line1, 2, 1);
	dbg("ratePos : (", ratePos.x, ", ", ratePos.y, ")\n");

	angle2d ang1 = _angle2d_delta(pos1.x - pos2.x, pos1.y - pos2.y);
	dbg("angle1( rad : ", ang1.radian, ", delta : (", ang1.delta.x, ", ", ang1.delta.y, "))\n");
	angle2d ang2 = _angle2d(PI / 3);
	dbg("angle2( rad : ", ang2.radian, ", delta : (", ang2.delta.x, ", ", ang2.delta.y, "))\n");
	angle2d rang = addAngle(ang1, ang2);
	dbg("rang( rad : ", rang.radian, ", delta : (", rang.delta.x, ", ", rang.delta.y, "))\n");

	pos1 = _vec2f(pos1.x + rang.delta.x * 30, pos1.y + rang.delta.y * 30);
	dbg("pos1 : (", pos1.x, ", ", pos1.y, ")\n");
	vec2f cross = get_cross_line(_line2d(pos1, _vec2f(10, 0)), _line2d(pos2, cir1.center));
	dbg("cross : (", cross.x, ", ", cross.y, ")\n");

	vec2f[2] circross = get_cross_CircleAndLine(cir1, _line2d(cross, _vec2f(20, 0)));
	dbg("circross[0] : (", circross[0].x, ", ", circross[0].y, ")\n");
	dbg("circross[1] : (", circross[1].x, ", ", circross[1].y, ")\n");
	vec2f enableCross = _vec2f(0, 0);
	if(isNAN(circross[0].x)){
		dbg("cross 0 is nan!!\n");
		enableCross = circross[1];
	}
	if(isNAN(circross[1].x)){
		dbg("cross 1 is nan!!\n");
		enableCross = circross[0];
	}
	dbg("enableCross : (", enableCross.x, ", ", enableCross.y, ")\n");

	int bSiz = 100;
	vec2f[100] bezierCurve = get_poses_in_Bezier1F(pos1, cross, pos2, bSiz);
	int i=0;while(i<bSiz){
		dbg("pos[", i, "] : (", bezierCurve[i].x, ", ", bezierCurve[i].y, ")\n");
		i+=1;
	}
	return 0;
}
4/2025 : "float"
7/2025 : "PI"
9/2025 : "="
11/2025 : "3"
12/2025 : "."
18/2025 : "141592"
19/2025 : ";"
23/2025 : "int"
28/2025 : "main"
29/2025 : "("
30/2025 : ")"
31/2025 : "{"
38/2025 : "vec2f"
43/2025 : "pos1"
45/2025 : "="
52/2025 : "_vec2f"
53/2025 : "("
55/2025 : "10"
56/2025 : ","
59/2025 : "20"
60/2025 : ")"
61/2025 : ";"
68/2025 : "vec2f"
73/2025 : "pos2"
75/2025 : "="
82/2025 : "_vec2f"
83/2025 : "("
84/2025 : "3"
85/2025 : ","
87/2025 : "4"
88/2025 : ")"
89/2025 : ";"
95/2025 : "dbg"
96/2025 : "("
106/2025 : ""pos1 : (""
107/2025 : ","
112/2025 : "pos1"
113/2025 : "."
114/2025 : "x"
115/2025 : ","
120/2025 : "", ""
121/2025 : ","
126/2025 : "pos1"
127/2025 : "."
128/2025 : "y"
129/2025 : ","
135/2025 : "")\n""
136/2025 : ")"
137/2025 : ";"
142/2025 : "dbg"
143/2025 : "("
153/2025 : ""pos2 : (""
154/2025 : ","
159/2025 : "pos2"
160/2025 : "."
161/2025 : "x"
162/2025 : ","
167/2025 : "", ""
168/2025 : ","
173/2025 : "pos2"
174/2025 : "."
175/2025 : "y"
176/2025 : ","
182/2025 : "")\n""
183/2025 : ")"
184/2025 : ";"
193/2025 : "line2d"
199/2025 : "line1"
201/2025 : "="
209/2025 : "_line2d"
210/2025 : "("
214/2025 : "pos1"
215/2025 : ","
220/2025 : "pos2"
221/2025 : ")"
222/2025 : ";"
229/2025 : "dbg"
230/2025 : "("
244/2025 : ""line1 : fp (""
245/2025 : ","
251/2025 : "line1"
252/2025 : "."
254/2025 : "fp"
255/2025 : "."
256/2025 : "x"
257/2025 : ","
262/2025 : "", ""
263/2025 : ","
269/2025 : "line1"
270/2025 : "."
272/2025 : "fp"
273/2025 : "."
274/2025 : "y"
275/2025 : ","
284/2025 : ""), lp(""
285/2025 : ","
291/2025 : "line1"
292/2025 : "."
294/2025 : "lp"
295/2025 : "."
296/2025 : "x"
297/2025 : ","
302/2025 : "", ""
303/2025 : ","
309/2025 : "line1"
310/2025 : "."
312/2025 : "lp"
313/2025 : "."
314/2025 : "y"
315/2025 : ","
321/2025 : "")\n""
322/2025 : ")"
323/2025 : ";"
331/2025 : "float"
335/2025 : "len"
337/2025 : "="
352/2025 : "get_distance2d"
353/2025 : "("
358/2025 : "line1"
359/2025 : ")"
360/2025 : ";"
365/2025 : "dbg"
366/2025 : "("
374/2025 : ""len : ""
375/2025 : ","
379/2025 : "len"
380/2025 : ","
385/2025 : ""\n""
386/2025 : ")"
387/2025 : ";"
396/2025 : "circle"
401/2025 : "cir1"
403/2025 : "="
411/2025 : "_circle"
412/2025 : "("
416/2025 : "pos1"
417/2025 : ","
421/2025 : "len"
422/2025 : ")"
423/2025 : ";"
428/2025 : "dbg"
429/2025 : "("
445/2025 : ""cir1 : center(""
446/2025 : ","
451/2025 : "cir1"
452/2025 : "."
458/2025 : "center"
459/2025 : "."
460/2025 : "x"
461/2025 : ","
466/2025 : "", ""
467/2025 : ","
472/2025 : "cir1"
473/2025 : "."
479/2025 : "center"
480/2025 : "."
481/2025 : "y"
482/2025 : ","
495/2025 : ""), radius(""
496/2025 : ","
501/2025 : "cir1"
502/2025 : "."
508/2025 : "radius"
509/2025 : ","
515/2025 : "")\n""
516/2025 : ")"
517/2025 : ";"
525/2025 : "vec2f"
533/2025 : "ratePos"
535/2025 : "="
561/2025 : "get_pos_in_LineAndRatioAB"
562/2025 : "("
567/2025 : "line1"
568/2025 : ","
570/2025 : "2"
571/2025 : ","
573/2025 : "1"
574/2025 : ")"
575/2025 : ";"
580/2025 : "dbg"
581/2025 : "("
594/2025 : ""ratePos : (""
595/2025 : ","
603/2025 : "ratePos"
604/2025 : "."
605/2025 : "x"
606/2025 : ","
611/2025 : "", ""
612/2025 : ","
620/2025 : "ratePos"
621/2025 : "."
622/2025 : "y"
623/2025 : ","
629/2025 : "")\n""
630/2025 : ")"
631/2025 : ";"
641/2025 : "angle2d"
646/2025 : "ang1"
648/2025 : "="
663/2025 : "_angle2d_delta"
664/2025 : "("
668/2025 : "pos1"
669/2025 : "."
670/2025 : "x"
672/2025 : "-"
677/2025 : "pos2"
678/2025 : "."
679/2025 : "x"
680/2025 : ","
685/2025 : "pos1"
686/2025 : "."
687/2025 : "y"
689/2025 : "-"
694/2025 : "pos2"
695/2025 : "."
696/2025 : "y"
697/2025 : ")"
698/2025 : ";"
703/2025 : "dbg"
704/2025 : "("
720/2025 : ""angle1( rad : ""
721/2025 : ","
726/2025 : "ang1"
727/2025 : "."
733/2025 : "radian"
734/2025 : ","
748/2025 : "", delta : (""
749/2025 : ","
754/2025 : "ang1"
755/2025 : "."
760/2025 : "delta"
761/2025 : "."
762/2025 : "x"
763/2025 : ","
768/2025 : "", ""
769/2025 : ","
774/2025 : "ang1"
775/2025 : "."
780/2025 : "delta"
781/2025 : "."
782/2025 : "y"
783/2025 : ","
790/2025 : ""))\n""
791/2025 : ")"
792/2025 : ";"
801/2025 : "angle2d"
806/2025 : "ang2"
808/2025 : "="
817/2025 : "_angle2d"
818/2025 : "("
820/2025 : "PI"
822/2025 : "/"
824/2025 : "3"
825/2025 : ")"
826/2025 : ";"
831/2025 : "dbg"
832/2025 : "("
848/2025 : ""angle2( rad : ""
849/2025 : ","
854/2025 : "ang2"
855/2025 : "."
861/2025 : "radian"
862/2025 : ","
876/2025 : "", delta : (""
877/2025 : ","
882/2025 : "ang2"
883/2025 : "."
888/2025 : "delta"
889/2025 : "."
890/2025 : "x"
891/2025 : ","
896/2025 : "", ""
897/2025 : ","
902/2025 : "ang2"
903/2025 : "."
908/2025 : "delta"
909/2025 : "."
910/2025 : "y"
911/2025 : ","
918/2025 : ""))\n""
919/2025 : ")"
920/2025 : ";"
929/2025 : "angle2d"
934/2025 : "rang"
936/2025 : "="
945/2025 : "addAngle"
946/2025 : "("
950/2025 : "ang1"
951/2025 : ","
956/2025 : "ang2"
957/2025 : ")"
958/2025 : ";"
963/2025 : "dbg"
964/2025 : "("
978/2025 : ""rang( rad : ""
979/2025 : ","
984/2025 : "rang"
985/2025 : "."
991/2025 : "radian"
992/2025 : ","
1006/2025 : "", delta : (""
1007/2025 : ","
1012/2025 : "rang"
1013/2025 : "."
1018/2025 : "delta"
1019/2025 : "."
1020/2025 : "x"
1021/2025 : ","
1026/2025 : "", ""
1027/2025 : ","
1032/2025 : "rang"
1033/2025 : "."
1038/2025 : "delta"
1039/2025 : "."
1040/2025 : "y"
1041/2025 : ","
1048/2025 : ""))\n""
1049/2025 : ")"
1050/2025 : ";"
1057/2025 : "pos1"
1059/2025 : "="
1066/2025 : "_vec2f"
1067/2025 : "("
1071/2025 : "pos1"
1072/2025 : "."
1073/2025 : "x"
1075/2025 : "+"
1080/2025 : "rang"
1081/2025 : "."
1086/2025 : "delta"
1087/2025 : "."
1088/2025 : "x"
1090/2025 : "*"
1093/2025 : "30"
1094/2025 : ","
1099/2025 : "pos1"
1100/2025 : "."
1101/2025 : "y"
1103/2025 : "+"
1108/2025 : "rang"
1109/2025 : "."
1114/2025 : "delta"
1115/2025 : "."
1116/2025 : "y"
1118/2025 : "*"
1121/2025 : "30"
1122/2025 : ")"
1123/2025 : ";"
1128/2025 : "dbg"
1129/2025 : "("
1139/2025 : ""pos1 : (""
1140/2025 : ","
1145/2025 : "pos1"
1146/2025 : "."
1147/2025 : "x"
1148/2025 : ","
1153/2025 : "", ""
1154/2025 : ","
1159/2025 : "pos1"
1160/2025 : "."
1161/2025 : "y"
1162/2025 : ","
1168/2025 : "")\n""
1169/2025 : ")"
1170/2025 : ";"
1177/2025 : "vec2f"
1183/2025 : "cross"
1185/2025 : "="
1200/2025 : "get_cross_line"
1201/2025 : "("
1208/2025 : "_line2d"
1209/2025 : "("
1213/2025 : "pos1"
1214/2025 : ","
1221/2025 : "_vec2f"
1222/2025 : "("
1224/2025 : "10"
1225/2025 : ","
1227/2025 : "0"
1228/2025 : ")"
1229/2025 : ")"
1230/2025 : ","
1238/2025 : "_line2d"
1239/2025 : "("
1243/2025 : "pos2"
1244/2025 : ","
1249/2025 : "cir1"
1250/2025 : "."
1256/2025 : "center"
1257/2025 : ")"
1258/2025 : ")"
1259/2025 : ";"
1264/2025 : "dbg"
1265/2025 : "("
1276/2025 : ""cross : (""
1277/2025 : ","
1283/2025 : "cross"
1284/2025 : "."
1285/2025 : "x"
1286/2025 : ","
1291/2025 : "", ""
1292/2025 : ","
1298/2025 : "cross"
1299/2025 : "."
1300/2025 : "y"
1301/2025 : ","
1307/2025 : "")\n""
1308/2025 : ")"
1309/2025 : ";"
1317/2025 : "vec2f"
1318/2025 : "["
1319/2025 : "2"
1320/2025 : "]"
1329/2025 : "circross"
1331/2025 : "="
1355/2025 : "get_cross_CircleAndLine"
1356/2025 : "("
1360/2025 : "cir1"
1361/2025 : ","
1369/2025 : "_line2d"
1370/2025 : "("
1375/2025 : "cross"
1376/2025 : ","
1383/2025 : "_vec2f"
1384/2025 : "("
1386/2025 : "20"
1387/2025 : ","
1389/2025 : "0"
1390/2025 : ")"
1391/2025 : ")"
1392/2025 : ")"
1393/2025 : ";"
1398/2025 : "dbg"
1399/2025 : "("
1416/2025 : ""circross[0] : (""
1417/2025 : ","
1426/2025 : "circross"
1427/2025 : "["
1428/2025 : "0"
1429/2025 : "]"
1430/2025 : "."
1431/2025 : "x"
1432/2025 : ","
1437/2025 : "", ""
1438/2025 : ","
1447/2025 : "circross"
1448/2025 : "["
1449/2025 : "0"
1450/2025 : "]"
1451/2025 : "."
1452/2025 : "y"
1453/2025 : ","
1459/2025 : "")\n""
1460/2025 : ")"
1461/2025 : ";"
1466/2025 : "dbg"
1467/2025 : "("
1484/2025 : ""circross[1] : (""
1485/2025 : ","
1494/2025 : "circross"
1495/2025 : "["
1496/2025 : "1"
1497/2025 : "]"
1498/2025 : "."
1499/2025 : "x"
1500/2025 : ","
1505/2025 : "", ""
1506/2025 : ","
1515/2025 : "circross"
1516/2025 : "["
1517/2025 : "1"
1518/2025 : "]"
1519/2025 : "."
1520/2025 : "y"
1521/2025 : ","
1527/2025 : "")\n""
1528/2025 : ")"
1529/2025 : ";"
1536/2025 : "vec2f"
1548/2025 : "enableCross"
1550/2025 : "="
1557/2025 : "_vec2f"
1558/2025 : "("
1559/2025 : "0"
1560/2025 : ","
1562/2025 : "0"
1563/2025 : ")"
1564/2025 : ";"
1568/2025 : "if"
1569/2025 : "("
1574/2025 : "isNAN"
1575/2025 : "("
1583/2025 : "circross"
1584/2025 : "["
1585/2025 : "0"
1586/2025 : "]"
1587/2025 : "."
1588/2025 : "x"
1589/2025 : ")"
1590/2025 : ")"
1591/2025 : "{"
1597/2025 : "dbg"
1598/2025 : "("
1618/2025 : ""cross 0 is nan!!\n""
1619/2025 : ")"
1620/2025 : ";"
1634/2025 : "enableCross"
1636/2025 : "="
1645/2025 : "circross"
1646/2025 : "["
1647/2025 : "1"
1648/2025 : "]"
1649/2025 : ";"
1652/2025 : "}"
1656/2025 : "if"
1657/2025 : "("
1662/2025 : "isNAN"
1663/2025 : "("
1671/2025 : "circross"
1672/2025 : "["
1673/2025 : "1"
1674/2025 : "]"
1675/2025 : "."
1676/2025 : "x"
1677/2025 : ")"
1678/2025 : ")"
1679/2025 : "{"
1685/2025 : "dbg"
1686/2025 : "("
1706/2025 : ""cross 1 is nan!!\n""
1707/2025 : ")"
1708/2025 : ";"
1722/2025 : "enableCross"
1724/2025 : "="
1733/2025 : "circross"
1734/2025 : "["
1735/2025 : "0"
1736/2025 : "]"
1737/2025 : ";"
1740/2025 : "}"
1745/2025 : "dbg"
1746/2025 : "("
1763/2025 : ""enableCross : (""
1764/2025 : ","
1776/2025 : "enableCross"
1777/2025 : "."
1778/2025 : "x"
1779/2025 : ","
1784/2025 : "", ""
1785/2025 : ","
1797/2025 : "enableCross"
1798/2025 : "."
1799/2025 : "y"
1800/2025 : ","
1806/2025 : "")\n""
1807/2025 : ")"
1808/2025 : ";"
1814/2025 : "int"
1819/2025 : "bSiz"
1821/2025 : "="
1825/2025 : "100"
1826/2025 : ";"
1833/2025 : "vec2f"
1834/2025 : "["
1837/2025 : "100"
1838/2025 : "]"
1850/2025 : "bezierCurve"
1852/2025 : "="
1874/2025 : "get_poses_in_Bezier1F"
1875/2025 : "("
1879/2025 : "pos1"
1880/2025 : ","
1886/2025 : "cross"
1887/2025 : ","
1892/2025 : "pos2"
1893/2025 : ","
1898/2025 : "bSiz"
1899/2025 : ")"
1900/2025 : ";"
1905/2025 : "int"
1907/2025 : "i"
1908/2025 : "="
1909/2025 : "0"
1910/2025 : ";"
1915/2025 : "while"
1916/2025 : "("
1917/2025 : "i"
1918/2025 : "<"
1922/2025 : "bSiz"
1923/2025 : ")"
1924/2025 : "{"
1930/2025 : "dbg"
1931/2025 : "("
1937/2025 : ""pos[""
1938/2025 : ","
1940/2025 : "i"
1941/2025 : ","
1949/2025 : ""] : (""
1950/2025 : ","
1962/2025 : "bezierCurve"
1963/2025 : "["
1964/2025 : "i"
1965/2025 : "]"
1966/2025 : "."
1967/2025 : "x"
1968/2025 : ","
1973/2025 : "", ""
1974/2025 : ","
1986/2025 : "bezierCurve"
1987/2025 : "["
1988/2025 : "i"
1989/2025 : "]"
1990/2025 : "."
1991/2025 : "y"
1992/2025 : ","
1998/2025 : "")\n""
1999/2025 : ")"
2000/2025 : ";"
2004/2025 : "i"
2005/2025 : "+"
2006/2025 : "="
2007/2025 : "1"
2008/2025 : ";"
2011/2025 : "}"
2019/2025 : "return"
2021/2025 : "0"
2022/2025 : ";"
2024/2025 : "}"
combine block : 3 : "3" + "." + 5 : "141592" => "3.141592"
combine block : 617 : "+" + 618 : "=" => "+="
finish
ICB[0x7fffffff71e0] BakeCode_ScanStructTypes...finish
ICB[0x7fffffff71e0] BakeCode_AddStructTypes...finish
ICB[0x7fffffff71e0] BakeCode_ScanCodes...finish
ICB[0x7fffffff71e0] BakeCode_GlobalMemoryInit...finish
ICB[0x7fffffff71e0] BakeCode_CompileCodes...finish
ICB[0x7fffffff71e0] BakeCode finish.
Create_New_ICB_Context From ICB[0x7fffffff71e0], with 40960 size memory...finish.